<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="approvalMapper">

	<resultMap type="kh.study.intranet.approval.vo.ApprovalVO" id="approval">
		<id column="APP_SEQ" 					property="appSeq"/>
		<result column="APP_WRITE_DATE" 		property="appWriteDate"/>
		<result column="TITLE" 					property="title"/>
		<result column="APP_CATE_CODE" 			property="appCateCode"/>
		<result column="USER_ID" 			property="userId"/>
		<association property="empVO" resultMap="empMapper.emp"/>
		<association property="appCategoryVO" resultMap="appCategory"/>
		<association property="vacationVO" resultMap="vacation"/>
		<association property="nomalVO" resultMap="nomal"/>
		<association property="accountingVO" resultMap="accounting"/>
		<association property="receiveRefVO" resultMap="receiveRef"/>
	 	<association property="userVO" resultMap="user"/>
	 
	</resultMap>
	
	
	
	<resultMap type="kh.study.intranet.approval.vo.AppCategoryVO" id="appCategory">
		<id column="APP_CATE_CODE" 		property="appCateCode"/>
		<result column="APP_CATE_NAME" 		property="appCateName"/>
	</resultMap>
	
	<resultMap type="kh.study.intranet.approval.vo.VacationVO" id="vacation">
		<id column="VACATION_SEQ" 		property="vacationSeq"/>
		<result column="VACATION_CONTENT" 		property="vacationContent"/>
		<result column="VACATION_START_DATE" 		property="vacationStartDate"/>
		<result column="VACATION_END_DATE" 		property="vacationEndDate"/>
		<result column="VACATION_PERIOD_DATE" 		property="vacationPeriodDate"/>
		<result column="USER_ID" 		property="userId"/>
		<result column="APP_SEQ" 		property="appSeq"/>
		
	</resultMap>
	
	<resultMap type="kh.study.intranet.approval.vo.NomalVO" id="nomal">
		<id column="NOMAL_SEQ" 		property="nomalSeq"/>
		<result column="NOMAL_CONTENT" 		property="nomalContent"/>
		<result column="APP_SEQ" 		property="appSeq"/>
		<result column="USER_ID" 		property="userId"/>
	</resultMap>
	
	<resultMap type="kh.study.intranet.approval.vo.AccountingVO" id="accounting">
		<id column="ACCOUNTING_SEQ" 		property="acco-untingSeq"/>
		<result column="PAYMENT_REQUEST_DATE" 		property="paymentRequestDate"/>
		<result column="ACCOUNTING_CLIENT" 		property="accountingClient"/>
		<result column="ACCOUNT_NUMBER" 		property="accountNumber"/>
		<result column="ACCOUNT" 		property="account"/>
		<result column="BUSINESS_REGISTRATION_NUMBER" 		property="businessRegistrationNumber"/>
		<result column="AMOUNT" 		property="amount"/>
		<result column="ACCOUNTING_CONTENT" 		property="accountingContent"/>
		<result column="ACCOUNTING_CATEGORY" 		property="accountingCategory"/>
		<result column="USER_ID" 		property="userId"/>
		<result column="APP_SEQ" 		property="appSeq"/>
	</resultMap>
	
	<resultMap type="kh.study.intranet.approval.vo.ReceiveRefVO" id="receiveRef">
		<id column="RECEIVE_REF_NUM" 		property="receiveRefNum"/>
		<result column="APP_SEQ" 		property="appSeq"/>
		<result column="FIRST_APPROVAL" 		property="firstApproval"/>
		<result column="FIRST_APPROVAL_EMP" 		property="firstApprovalEmp"/>
		<result column="FINAL_APPROVAL" 		property="finalApproval"/>
		<result column="FINAL_APPROVAL_EMP" 		property="finalApprovalEmp"/>
		<result column="APP_CATE_CODE" 		property="appCateCode"/>
		<result column="APP_SEQ_STATUS" 		property="appSeqStatus"/>
	<!-- 	<association property="approvalVO" resultMap="approval"/> -->
	</resultMap>
	
	
	<resultMap type="kh.study.intranet.main.vo.UserVO" id="user">
		<id column="USER_ID" 		property="userId"/>
		<result column="USER_PW" 		property="userPw"/>
		<result column="EMP_NUM" 		property="empNum"/>
		<result column="EMP_NAME" 		property="empName"/>
		<result column="EMP_GENDER" 		property="empGender"/>
		<result column="EMP_BIRTH_DAY" 		property="empBirthDay"/>
		<result column="EMP_TELL" 		property="empTell"/>
		<result column="EMP_ADDR" 		property="empAddr"/>
		<result column="EMP_DETAIL_ADDR" 		property="empDetailAddr"/>
		<result column="EMP_EMAIL" 		property="empEmail"/>
		<result column="DEPT_CODE" 		property="deptCode"/>
		<result column="DEPT_NAME" 		property="deptName"/>
		<result column="EMP_POSITION" 		property="empPosition"/>
		<result column="EMP_ROLE" 		property="empRole"/>
		<result column="EMP_PICTURE_ORIGIN_NAME" 		property="empPictureOriginName"/>
		<result column="EMP_PICTURE_REFILE_NAME" 		property="empPictureRefileName"/>
		<result column="EMP_HIRE_DATE" 		property="empHireDate"/>
	</resultMap>
	
	<!-- 문서번호,기안일 자동생성  -->
	<select id="getAppSeq" resultMap="approval">
		SELECT (SELECT 'APP_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(APP_SEQ, 5))), 0) + 1, 3, 0) FROM APPROVAL) APP_SEQ
        ,TO_CHAR(SYSDATE,'YYYY-MM-DD') AS APP_WRITE_DATE
		FROM DUAL
	</select>
	
	<!-- 로그인한 유저 조회 -->
	<select id="selectAppEmp" resultMap="empMapper.emp">
		SELECT EMP_NAME
			, EMP.DEPT_NAME
		FROM EMP, DEPT
		WHERE EMP.DEPT_CODE = DEPT.DEPT_CODE
		AND USER_ID = #{userId}
	</select>
	
	<!-- 승인칸 팀장,부장들 조회 -->
	<select id="selectRole" resultMap="empMapper.emp">
		SELECT EMP_ROLE, EMP_NAME, EMP_POSITION, EMP_NUM ,DEPT_NAME
		FROM EMP
		WHERE DEPT_NAME = #{deptName}
		AND (EMP.EMP_POSITION='팀장'
		OR EMP.EMP_POSITION= '부장')
	</select>
	
	<!-- 품의서 등록 -->
	<insert id="insertApproval">
		INSERT INTO APPROVAL(
			APP_SEQ
            ,USER_ID
            ,TITLE
            ,APP_CATE_CODE
		) VALUES(
			(SELECT 'APP_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(APP_SEQ, 5))), 0) + 1, 3, 0) FROM APPROVAL)
            ,#{userId}
            ,#{title}
            ,#{appCateCode}
		)
	</insert>
	
	<!-- 휴가신청서 등록 -->
	<insert id="insertVacation">
		<selectKey resultType="String" keyProperty="vacationSeq" order="BEFORE">
			SELECT 'VACATION_APP_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(VACATION_SEQ, 14))), 0) + 1, 3, 0) 
			FROM APP_FORM_VACATION  
		</selectKey>
		INSERT INTO APP_FORM_VACATION (
			APP_SEQ
			, VACATION_SEQ
			, VACATION_START_DATE
			, VACATION_END_DATE
			, VACATION_PERIOD_DATE
			, VACATION_CONTENT
			, USER_ID
		)VALUES (
			#{appSeq}
			, #{vacationSeq}
			, #{vacationStartDate}
			, #{vacationEndDate}
			, #{vacationPeriodDate}
			, #{vacationContent}
			, #{userId}
		)
	</insert>
	
	<!-- 기안서 등록 -->
	<insert id="insertNomal">
		<selectKey resultType="String" keyProperty="nomalSeq" order="BEFORE">
			SELECT 'NOMAL_APP_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(NOMAL_SEQ, 11))), 0) + 1, 3, 0) 
			FROM APP_FORM_NOMAL  
		</selectKey>
		INSERT INTO APP_FORM_NOMAL (
			APP_SEQ
			, NOMAL_SEQ
			, NOMAL_CONTENT
			, USER_ID
		)VALUES (
			#{appSeq}
			, #{nomalSeq}
			, #{nomalContent}
			, #{userId}
		)
	</insert>
	
	<!-- 회계품의서 등록 -->
	<insert id="insertAccounting">
		<selectKey resultType="String" keyProperty="accountingSeq" order="BEFORE">
			SELECT 'ACCOUNTING_APP_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(ACCOUNTING_SEQ, 16))), 0) + 1, 3, 0) 
			FROM APP_FORM_ACCOUNTING  
		</selectKey>
		INSERT INTO APP_FORM_ACCOUNTING (
			ACCOUNTING_SEQ
			, PAYMENT_REQUEST_DATE
			, ACCOUNTING_CLIENT
			, ACCOUNT_NUMBER
			, ACCOUNT
			, BUSINESS_REGISTRATION_NUMBER
			, AMOUNT
			, ACCOUNTING_CONTENT
			, ACCOUNTING_CATEGORY
			, APP_SEQ
			, USER_ID
		)VALUES (
			#{accountingSeq}
			, #{paymentRequestDate}
			, #{accountingClient}
			, #{accountNumber}
			, #{account}
			, #{businessRegistrationNumber}
			, #{amount}
			, #{accountingContent}
			, #{accountingCategory}
			, #{appSeq}
			, #{userId}
		)
	</insert>
	<!-- 결재선 등록 -->
	<insert id="insertReceiveRef">
		<selectKey resultType="String" keyProperty="receiveRefNum" order="BEFORE">
			SELECT 'RECEIVE_REF_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(RECEIVE_REF_NUM, 13))), 0) + 1, 3, 0) 
			FROM APP_RECEIVE_REF  
		</selectKey>
		INSERT INTO APP_RECEIVE_REF(
			RECEIVE_REF_NUM
			, APP_SEQ
			, FIRST_APPROVAL
			, FIRST_APPROVAL_EMP
			, FINAL_APPROVAL
			, FINAL_APPROVAL_EMP
			, APP_CATE_CODE
			, APP_SEQ_STATUS
		) VALUES(
			#{receiveRefNum}
			, #{appSeq}
			, #{firstApproval}
			, #{firstApprovalEmp}
			, #{finalApproval}
			, #{finalApprovalEmp}
			, #{appCateCode}
			, #{appSeqStatus}
		)
	</insert>
	
	<!-- 신성처 조회 + 검색기능 -->
	<select id="selectApp" resultMap="approval">
      SELECT RN
         , APP_SEQ
         , APP_WRITE_DATE
         , APP_CATE_CODE
           , TITLE
            , USER_ID
            , EMP_NAME 
            , DEPT_NAME 
            , APP_SEQ_STATUS
            , APP_CATE_NAME
      FROM 
      (
      SELECT ROWNUM AS RN
         , APPROVAL.APP_SEQ
         , TO_CHAR(APP_WRITE_DATE,'YYYY-MM-DD') AS APP_WRITE_DATE
         , APPROVAL.APP_CATE_CODE
         , TITLE
         , APPROVAL.USER_ID
         ,(SELECT EMP_NAME FROM EMP WHERE EMP.USER_ID = APPROVAL.USER_ID) AS EMP_NAME 
         ,(SELECT DEPT_NAME FROM EMP WHERE EMP.USER_ID = APPROVAL.USER_ID) AS DEPT_NAME 
         , APP_SEQ_STATUS
         , APP_CATE_NAME
      FROM APPROVAL , APP_CATEGORY CATEGORY , EMP , APP_RECEIVE_REF
      WHERE APPROVAL.APP_CATE_CODE = CATEGORY.APP_CATE_CODE
      AND APPROVAL.USER_ID = EMP.USER_ID
      AND APPROVAL.APP_SEQ = APP_RECEIVE_REF.APP_SEQ
      <if test="appSeqStatus != null and !appSeqStatus.equals('')">
      AND APP_SEQ_STATUS = #{appSeqStatus}
      </if>
      <if test="appSeq != null and !appSeq.equals('')">
      AND APPROVAL.APP_SEQ = #{appSeq}
      </if>
      <if test="title != null and !title.equals('')">
      AND UPPER(TITLE) LIKE UPPER('%'||#{title}||'%')
      </if>      
      <if test="empName != null and !empName.equals('')">
      AND EMP_NAME LIKE ('%'||#{empName}||'%')
      </if>
      <if test="appCateCode != null and !appCateCode.equals('')">
      AND APPROVAL.APP_CATE_CODE = #{appCateCode}
      </if>
      <if test="fromDate != null and !fromDate.equals('')">
      AND TO_CHAR(APP_WRITE_DATE, 'YYYY-MM-DD') &gt;= #{fromDate}  
      </if>      
      <if test="toDate != null and !toDate.equals('')">
      AND TO_CHAR(APP_WRITE_DATE, 'YYYY-MM-DD') &lt;= #{toDate}
      </if>      
      ORDER BY APPROVAL.APP_SEQ DESC
      )
      <if test ="startNum !=null and endNum != null">
        WHERE RN &gt;= #{startNum} AND RN &lt;= #{endNum}
        </if>
   </select>
	
	<!-- 기안서 리스트 조회 -->
	<select id="selectBoxList" resultMap="approval"> 
		SELECT DISTINCT APP_CATE_NAME, APPROVAL.APP_CATE_CODE
		FROM APPROVAL,APP_CATEGORY
		WHERE APPROVAL.APP_CATE_CODE = APP_CATEGORY.APP_CATE_CODE 
		<!-- DISTINCT -->
	</select> 
	
	<!-- 기안서별 조회 -->
	<select id="appDocuments" resultMap="approval">
      SELECT *
      FROM APPROVAL APP, EMP , ${table}
      WHERE  APP.APP_SEQ = ${table}.APP_SEQ
      AND APP.USER_ID = EMP.USER_ID
      AND APP.APP_SEQ = #{appSeq}
   </select>
	
	<!-- 결재권자 조회  -->
	<select id="selectReciveRef" resultType="hashmap">
		SELECT FIRST_APPROVAL
		 	, FINAL_APPROVAL
			, FIRST_APPROVAL_EMP
			, (SELECT EMP_NAME
			FROM EMP WHERE EMP_NUM = APP_RECEIVE_REF.FIRST_APPROVAL_EMP) AS FIRST_EMP_NAME
			, (SELECT USER_ID FROM EMP WHERE EMP_NUM = APP_RECEIVE_REF.FIRST_APPROVAL_EMP) AS FIRST_USER_ID
			, FINAL_APPROVAL_EMP
			, (SELECT EMP_NAME
			FROM EMP WHERE EMP_NUM = APP_RECEIVE_REF.FINAL_APPROVAL_EMP) AS FINAL_EMP_NAME
			, (SELECT USER_ID FROM EMP WHERE EMP_NUM = APP_RECEIVE_REF.FINAL_APPROVAL_EMP) AS FINAL_USER_ID
		FROM APP_RECEIVE_REF
		WHERE APP_SEQ = #{appSeq}
	</select>
	
	<!-- 첫번쨰 승인 클릭시 업데이트 -->
	<update id="updateApproval">
		UPDATE APP_RECEIVE_REF
			SET FIRST_APPROVAL = 'Y'
				, APP_SEQ_STATUS = '결재중'
		WHERE FIRST_APPROVAL_EMP = #{firstApprovalEmp}
        AND APP_SEQ = #{appSeq}
	</update> 
	<!-- 두번쨰 승인 클릭시 업데이트 -->
	<update id="updateFinalApproval">
		UPDATE APP_RECEIVE_REF
			SET FINAL_APPROVAL = 'Y'
				, APP_SEQ_STATUS = '결재완료'
		WHERE FINAL_APPROVAL_EMP = #{finalApprovalEmp}
        AND APP_SEQ = #{appSeq}
	</update> 
	<!-- 결재진행별 카운트 조회 -->
	<select id="selectAppCount" resultType="hashmap">
		SELECT DISTINCT (SELECT COUNT(APP_SEQ_STATUS) FROM APP_RECEIVE_REF 
				WHERE APP_SEQ_STATUS = '결재대기') AS SEQ_STATUS_ONE
			, (SELECT COUNT(APP_SEQ_STATUS) FROM APP_RECEIVE_REF 
				WHERE APP_SEQ_STATUS = '결재중') AS SEQ_STATUS_TWO
			, (SELECT COUNT(APP_SEQ_STATUS) FROM APP_RECEIVE_REF 
				WHERE APP_SEQ_STATUS = '결재완료') AS SEQ_STATUS_TREE
		FROM APP_RECEIVE_REF
		
	</select>
	
	<!-- 결재권자 결재문서함 -->
	<select id="selectReceiveApp" resultMap="approval">
		SELECT ROWNUM AS RN
        	 , APP_SEQ
        	 , APP_WRITE_DATE
       		 , APP_CATE_CODE
          	 , TITLE
          	 , USER_ID
          	 , EMP_NAME 
          	 , DEPT_NAME 
          	 , APP_SEQ_STATUS
             , APP_CATE_NAME
             , FIRST_APPROVAL_EMP
     		 , FINAL_APPROVAL_EMP
     		 , EMP_POSITION
      FROM (
		SELECT DISTINCT ROWNUM AS RN
        	 , APPROVAL.APP_SEQ
        	 , APP_WRITE_DATE
       		 , APPROVAL.APP_CATE_CODE
          	 , TITLE
          	 , APPROVAL.USER_ID
          	 , (SELECT EMP_NAME FROM EMP WHERE EMP.USER_ID = APPROVAL.USER_ID) AS EMP_NAME 
          	 , (SELECT DEPT_NAME FROM EMP WHERE EMP.USER_ID = APPROVAL.USER_ID) AS DEPT_NAME 
          	 , APP_SEQ_STATUS
             , APP_CATE_NAME
             , FIRST_APPROVAL_EMP
     		 , FINAL_APPROVAL_EMP
     		 , EMP_POSITION
      FROM APPROVAL , APP_CATEGORY CATEGORY , EMP , APP_RECEIVE_REF REF
      WHERE APPROVAL.APP_CATE_CODE = CATEGORY.APP_CATE_CODE
      AND APPROVAL.USER_ID = EMP.USER_ID
      AND APPROVAL.APP_SEQ = REF.APP_SEQ
      <if test="empPosition.equals('팀장') and !empPosition.equals('')">
      AND (APP_SEQ_STATUS = '결재대기'
      OR APP_SEQ_STATUS= '결재중')
      </if>
      <if test="empPosition.equals('부장') and !empPosition.equals('')">
      AND (APP_SEQ_STATUS = '결재중'
      OR APP_SEQ_STATUS = '결재완료')
      </if>
      AND (FIRST_APPROVAL_EMP = #{empNum}
      OR FINAL_APPROVAL_EMP = #{empNum})
      ORDER BY APP_SEQ DESC
      )
      <if test ="startNum !=null and endNum != null">
        WHERE RN &gt;= #{startNum} AND RN &lt;= #{endNum}
       </if>
	</select>
</mapper>

